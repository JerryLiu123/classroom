<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
	xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.2.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
http://www.springframework.org/schema/websocket 
http://www.springframework.org/schema/websocket/spring-websocket.xsd">


	<context:component-scan base-package="com.classroom.wnn.controller" />
	<!-- <context:component-scan base-package="com.classroom.wnn.util.config" /> -->
	<!-- 静态文件目录 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 新的websocket -->
<!-- 	<bean id="newWebSockTest" class="com.classroom.wnn.socket.NewWebSockTest"></bean>
	<websocket:handlers>
		<websocket:mapping handler="newWebSockTest" path="/websocket"/>
		<websocket:handshake-interceptors>
			<bean class="com.classroom.wnn.socket.HandshakeInterceptor"></bean>
		</websocket:handshake-interceptors>
	</websocket:handlers> -->
	
 	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
 		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value><!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			</list>
		</property>
	</bean>    
    <bean id="stringConverter" 
    	class="org.springframework.http.converter.StringHttpMessageConverter">
         <constructor-arg value="UTF-8" /><!--避免出现乱码 -->  
         <property name="supportedMediaTypes">  
	       <list>  
	           <value>text/plain;charset=UTF-8</value>  
	       </list>  
   		</property>
    </bean>
   	<mvc:annotation-driven>
        <mvc:message-converters>
        	<ref bean="stringConverter"/>
			<ref bean="jsonConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
	
	<!-- jsonp支持，用于跨域  只要是参数中带有callback或jsonp即可对jsonp进行相应-->
	<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">  
	    <property name="jsonpParameterNames">  
	        <set>  
	            <value>jsonp</value>  
	            <value>callback</value>  
	        </set>  
	   </property>  
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" />
		
	<!-- 文件上传设置 弃用，现在使用stream + servlet 的方式 -->
<!-- 	<bean id="multipartResolver" class="com.classroom.wnn.controller.CustomMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>2147483648</value>上传文件大小限制为2G，2*1024*1024*1024
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean> -->

	<!-- 的配置拦截器, 多个拦截器,顺序执行 mvc是spring3之后的一个新的命名空间 -->
	<!-- <mvc:interceptors> 
			<mvc:interceptor> 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller 
				<mvc:mapping path="/version/**" /> 
				<mvc:mapping path="/feedback/**" /> 
				<bean class="com.gladtrust.x315.manage.utility.UserInterceptor"></bean> 
			</mvc:interceptor> 
		当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 
		</mvc:interceptors> -->

</beans>